name: Static Security Pipeline

on:
  push:
    branches: [feature]
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:

  sast-sca-secrets:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: SAST, SCA, Secrets Scan (feature branches)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python dependencies for scanners
        run: |
          python3 -m pip install --upgrade pip
          pip install semgrep jq pip-audit

      - name: Run Semgrep
        run: semgrep --config .semgrep/rules --sarif --output=semgrep-report.sarif || true

      - name: Run pip-audit
        run: pip-audit -r "python/HTML-injection/requirements.txt" --format=json --output pip-audit-report.json || true
        # run: |
        #   echo '{"results": [' > pip-audit-report.json
        #   first=1
        #   find . -name requirements.txt | while read file; do
        #     echo "Auditing $file"
        #     pip-audit -r "$file" --format=json > tmp.json || true
        #     # Вырезаем внешние [] и добавляем в общий массив
        #     items=$(jq '.[]' tmp.json)
        #     if [[ "$items" != "" ]]; then
        #       if [[ $first -eq 0 ]]; then echo ',' >> pip-audit-report.json; fi
        #       echo "$items" >> pip-audit-report.json
        #       first=0
        #     fi
        #   done
        #   echo ']}' >> pip-audit-report.json

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true

      - name: Upload Semgrep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.sarif

      - name: Upload pip-audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit-report.json

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: results.sarif

  quality-gate:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Quality Gate on PR to develop
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python dependencies for scanners
        run: pip install semgrep pip-audit

      - name: Run Semgrep
        run: semgrep --config .semgrep/rules --sarif --output=semgrep-report.sarif || true

      - name: Run pip-audit
        run: pip-audit -r "python/HTML-injection/requirements.txt" --format=json --output pip-audit-report.json || true

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Run Quality Gate script
        run: python3 scripts/check_security_findings.py semgrep-report.sarif pip-audit-report.json results.sarif
